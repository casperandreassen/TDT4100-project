package billing_app;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertThrows;


import java.io.File;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.net.URISyntaxException;
import java.text.ParseException;
import java.util.ArrayList;
import java.util.List;

import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;

import billing_app.items.Item;
import billing_app.logic.Company;
import billing_app.logic.Customer;
import billing_app.saving.SaveCompany;
import javafx.fxml.LoadException;

public class SaveCompanyTests {


    Company company;
    SaveCompany save;

    @BeforeEach
    public void init() {
        company = new Company(null);
        save = new SaveCompany();
    }

    /* If this test throws IOExceptions its because it cannot find the test savefile, make sure its located in resources. */
    @Test
    public void testSaveIllegalCompany() throws URISyntaxException {
        assertThrows(IllegalStateException.class, () -> save.saveCompanyState(company, new File(getClass().getResource("saveForTests.txt").toURI())));
    }


    /* Since the whole company is loaded at once, if the loaded bills are incomplete the rest is also incomplete. */
    @Test
    public void testLoadLegalCompany() throws FileNotFoundException, IOException, URISyntaxException, ParseException {
        company = save.loadCompanyFromFile(new File(getClass().getResource("legalCompanySave.txt").toURI()));
        assertEquals("Fiskermann AS", company.getName());

        /* Test sizes */
        assertEquals(1, company.getCompanyItems().size());
        assertEquals(1, company.getCompanyCustomers().size());
        assertEquals(1, company.getCompanySentBills().size());

        List<Customer> customers = (List<Customer>) company.getCompanyCustomers();

        /* Test that the customer in the company is the same as on the bill. */
        assertEquals(customers.get(0).getBusinessId(), company.getCompanySentBills().get(0).getBillCustomer().getBusinessId());

        List<Item> billItems = new ArrayList<Item>(company.getCompanySentBills().get(0).getItems().keySet());
        List<Item> companyItems = (List<Item>) company.getCompanyItems();

        /* Test that the item on the bill is the same as the one in the company */
        assertEquals(companyItems.get(0), billItems.get(0));
    }


    /* Uses a savefile generated by the program but with missing fields making it corrupt. */
    @Test
    public void testLoadOfCorruptedSaveFile() {
        assertThrows(LoadException.class, () -> save.loadCompanyFromFile(new File(getClass().getResource("corruptSave.txt").toURI())));
    }

    /* Tries to load a file that is not a .txt file. */
    @Test
    public void testLoadOfInvalidFileFormat() {
        assertThrows(IllegalArgumentException.class, () -> save.loadCompanyFromFile(new File(getClass().getResource("Overview.fxml").toURI())));
    }
}
